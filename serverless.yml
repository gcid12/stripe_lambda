# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: S100-aws-node-stripe

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs14.x
  stage: test
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
# iamRoleStatements:
#     - Effect: "Allow"
#     Action:
#       - "lambda:InvokeAsync"
#       - "lambda:InvokeFunction"
#     Resource: 
#       - "*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  include:
    - config/**
    - node_modules/**
  exclude:
    - package.json
  #IF you want to pack your functions individually
  #individually: true

functions:
  incoming:
    handler: handler.incoming
    events:
      - http:
          path: stripe/incoming
          method: post
  createCharge:
    handler: functions/createCharge.handler
    # The `events` block defines how to trigger the handler.createCharge code
    events:
      - http:
          path: charges
          method: post
          cors: true
          request: 
  listCharge:
    handler: functions/listCharge.handler
    events:
      - http:
          path: charges/{id}
          method: get
          cors: true
          request:
  createTransfer:
    handler: functions/createTransfer.handler
    events:
      - http:
          path: transfer
          method: post
          cors: true
          request:
  listTransfer:
    handler: functions/listTransfer.handler
    events:
      - http:
          path: transfer/{id}
          method: get
          cors: true
          request:
  createCustomer:
    handler: functions/createCustomer.handler
    events:
      - http:
          path: customer
          method: post
          cors: true
          request: 
  connectUser:
    handler: functions/connectUser2.handler
    events:
      - http:
          path: connectuser/{account}
          method: post
          cors: true
          request: 
  connectUserStandard:
    handler: functions/connectUserStandard.handler
    events:
      - http:
          path: connectStandard
          method: post
          cors: true
          request: 
  getConnectLink:
    handler: functions/getConnectLink.handler
    events:
      - http:
          path: getLink
          method: post
          cors: true
          request:
  getAccountInfo:
    handler: functions/getAccountInfo.handler
    events:
      - http:
          path: getAccount
          method: post
          cors: true
          request:
  createJson:
    handler: functions/createJson.handler
    events:
      - http:
          path: createjson/{tokenid}
          method: post
          cors: true
          request: 
  getMeta:
    handler: functions/getUrlMeta.handler
    events:
      - http:
          path: getmeta
          method: get
          cors: true
          request: 
  getCheckoutLink:
    handler: functions/getCheckoutLink.handler
    events:
      - http:
          path: getCheckoutLink
          method: post
          cors: true
          request:
  
